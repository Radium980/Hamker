from pymongo import MongoClient
from config import MONGO_DB_URI
import asyncio
import random
import os

from pyrogram import filters
from pyrogram.enums import ChatType
from pyrogram.types import InlineKeyboardMarkup, Message, InlineKeyboardButton, CallbackQuery
from src import app

DATABASE = MongoClient(MONGO_DB_URI)
db = DATABASE["MAIN"]["USERS"]
collection = db["members"]

def add_user_database(user_id: int):
    check_user = collection.find_one({"user_id": user_id})
    if not check_user:
        return collection.insert_one({"user_id": user_id})

@app.on_message(filters.command("start"))
async def start(_, m: Message):
    add_user_database(m.from_user.id)
    await m.reply_animation("https://graph.org/file/bcf8feee5135a01700a10.mp4", caption=f"""ü•Ä  ú·¥á è {m.from_user.mention},\n\n·¥õ ú…™s …™s {app.me.mention},\n·¥õ ú·¥á ·¥ç·¥ès·¥õ ·¥ús·¥á ü·¥áss ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç  ô·¥è·¥õ ·¥á·¥†·¥á Ä ·¥ç·¥Ä·¥Ö·¥á.""",
                         reply_markup=InlineKeyboardMarkup([
        [InlineKeyboardButton(text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥á üs·¥á  è·¥è·¥ú …¢·¥á è", url=f"https://t.me/{app.me.username}?startgroup=new")],
        [InlineKeyboardButton(text=" ú·¥á ü·¥ò", callback_data="help"), InlineKeyboardButton(text="s·¥è·¥ú Ä·¥Ñ·¥á", callback_data="source")]
    ]))

@app.on_callback_query(filters.regex("help"))
async def cb_func_help(_, query: CallbackQuery):
    await query.message.edit_text(text=f"""‚ûª  ú·¥á Ä·¥á …™s ·¥õ ú·¥á  ú·¥á ü·¥ò ·¥ç·¥á…¥·¥ú ·¥è“ì {app.me.mention} :

‚Ü¨ /ai : ·¥úÍú±·¥á Íú∞ Ä·¥á·¥á ·¥Ä…™ ·¥°…™·¥õ ú·¥è·¥ú·¥õ ·¥Ä·¥ò…™ ·¥ã·¥á è.
‚Ü¨ /imagine : …¢…™·¥†·¥á ·¥ò Ä·¥è·¥ç·¥ò·¥õ ·¥õ·¥è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á ùüæ·¥ã ·¥Ä…™ …™·¥ç·¥Ä…¢·¥ás.
‚Ü¨ /mid : …¢…™·¥†·¥á ·¥ò Ä·¥è·¥ç·¥ò·¥õ ·¥õ·¥è …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥á ·¥ç…™·¥Ö ·¥Ä…™ …™·¥ç·¥Ä…¢·¥ás                                                                                              
‚Ü¨ /alive : s ú·¥è·¥°s ·¥õ ú·¥á ·¥Ä ü…™·¥†·¥á s·¥õ·¥Ä·¥õ·¥ús ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
‚Ü¨ /echo : s·¥á…¥·¥Ös ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥õ·¥áx·¥õ.
‚Ü¨ /figlet : …¢·¥á…¥·¥á Ä·¥Ä·¥õ·¥ás ·¥Ä “ì…™…¢ ü·¥á·¥õ ·¥è“ì …¢…™·¥†·¥á…¥ …¥·¥Ä·¥ç·¥á.
‚Ü¨ /img : s ú·¥è·¥°s …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥ ·¥Ä ô·¥è·¥ú·¥õ ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö …™·¥ç·¥Ä…¢·¥á.
‚Ü¨ /ping : s ú·¥è·¥°s ·¥õ ú·¥á ·¥ò…™…¥…¢  ü·¥Ä·¥õ·¥á…¥·¥Ñ è ·¥Ä…¥·¥Ö s ès·¥õ·¥á·¥ç s·¥õ·¥Ä·¥õs ·¥è“ì ·¥õ ú·¥á  ô·¥è·¥õ.
‚Ü¨ /q : ·¥ç·¥Ä·¥ã·¥á's ·¥Ä «´·¥ú·¥è·¥õ·¥á ·¥è“ì ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ç·¥áss·¥Ä…¢·¥á.
‚Ü¨ /shorturl : s ú·¥è Ä·¥õ·¥á…¥s ·¥õ ú·¥á …¢…™·¥†·¥á…¥ ·¥ú Ä ü.
‚Ü¨ /start : s·¥õ·¥Ä Ä·¥õs ·¥ç·¥á.
‚Ü¨ /sname : ·¥Ö·¥á·¥Ñ·¥è·¥Ö·¥ás ·¥õ ú·¥á …¥·¥Ä·¥ç·¥á ·¥è“ì ·¥õ ú·¥á  Ä·¥á·¥ò ü…™·¥á·¥Ö ·¥ús·¥á Ä ·¥°…™·¥õ ú ·¥ú…¥…™·¥Ö·¥á·¥Ñ·¥è·¥Ö·¥á.
‚Ü¨ /yt :  ü…™…¥·¥ã ·¥è Ä …¥·¥Ä·¥ç·¥á ·¥è“ì  è·¥è·¥ú·¥õ·¥ú ô·¥á ·¥†…™·¥Ö·¥á·¥è ·¥õ·¥è ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö.
‚Ü¨ /webss : ·¥Ñ·¥Ä·¥ò·¥õ·¥ú Ä·¥ás ·¥Ä s·¥Ñ Ä·¥á·¥á…¥s ú·¥è·¥õ ·¥è“ì ·¥õ ú·¥á …¢…™·¥†·¥á…¥ s…™·¥õ·¥á.""", 
                                  reply_markup=InlineKeyboardMarkup([
                                      [InlineKeyboardButton(text=" ô·¥Ä·¥Ñ·¥ã", callback_data="back")]]))


@app.on_callback_query(filters.regex("back"))
async def cb_func_back(_, query: CallbackQuery):
    check_user = collection.find_one({"user_id": query.from_user.id})
    if not check_user:
        add_user_database(query.from_user.id)
    await query.message.edit_text(text=f"""ü•Ä  ú·¥á è {query.from_user.mention},\n\n·¥õ ú…™s …™s {app.me.mention},\n·¥õ ú·¥á ·¥ç·¥ès·¥õ ·¥ús·¥á ü·¥áss ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç  ô·¥è·¥õ ·¥á·¥†·¥á Ä ·¥ç·¥Ä·¥Ö·¥á.""",        
        reply_markup=InlineKeyboardMarkup(
                [
                    [
                        InlineKeyboardButton(text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥á üs·¥á  è·¥è·¥ú …¢·¥á è", url=f"https://t.me/{app.me.username}?startgroup=new")
                    ],
                    [
                        InlineKeyboardButton(text=" ú·¥á ü·¥ò", callback_data="help"),
                        InlineKeyboardButton(text="s·¥è·¥ú Ä·¥Ñ·¥á", callback_data="source")
                    ]
                ]
            )
    )

@app.on_callback_query(filters.regex("source"))
async def cb_func_source(_, query: CallbackQuery):
    await query.message.edit_text(text=f"""“ì·¥è Ä s·¥è·¥ú Ä·¥Ñ·¥á ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ @Mirzye""",
                                  reply_markup=InlineKeyboardMarkup([
                                      [InlineKeyboardButton(text=" ô·¥Ä·¥Ñ·¥ã", callback_data="back")]]))
